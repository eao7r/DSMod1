# -*- coding: utf-8 -*-
"""Module01_Ex_PartB.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19ty48VY_-JEP9_EmRb4ZxVNzCaLVwu7V

**Module 01 Exercise: Python Part B**  
**Andy Ortiz**  
**eao7r**

1) Create a long sentence of words [assume NO punctuation].
"""

sentence = "This is a sentence of words put together by me with a couple of duplicate words"
print(sentence)

"""2) Put the words into a list.  """

wordlist = sentence.split(" ")
print(wordlist)

"""3) Use a list comprehension to return the word along  
with the length of it. Use this â†’  (word, len(word)).
"""

[(word, len(word)) for word in wordlist]

"""4) Finally, print out all the words (along with the word length)"""

words = [(word, len(word)) for word in wordlist]
for pair in words:
  print(pair[0] + ": " + str(pair[1]))

"""5) Print out the word-size tuples in sorted order  
by length (smallest to largest)
"""

words = [(word, len(word)) for word in wordlist]
# use an anonymous function to sort by the second element in the tuple
words.sort(key = lambda x: x[1])
print("ascending words:", words)
print("number of words:", len(words))

"""6) Print out only unique words (i.e., no repetitions)."""

# use the set() function to obtain unique tuples
words = [(word, len(word)) for word in set(wordlist)]
words.sort(key = lambda x: x[1])
print("unique ascending words:", words)
print("number of unique words:", len(words))